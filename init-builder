#! /usr/bin/env /bin/bash

set -euo pipefail

# Defaults
ORIG_IFS=${IFS}
DOCKER_REGISTRY=${DOCKER_REGISTRY:-localhost:5000}
DOCKER_BUILDER=${DOCKER_BUILDER:-container-builder}
DOCKER_REGISTRY_NAME=${DOCKER_REGISTRY_NAME:-registry}
DOCKER_REGISTRY_IMAGE=${DOCKER_REGISTRY_IMAGE:-registry:2}

function setup_variables() {
  local env_host=$(echo $DOCKER_REGISTRY | awk -F ':' '{print $1}')
  local env_port=$(echo $DOCKER_REGISTRY | awk -F ':' '{print $2}')

  DOCKER_REGISTRY_HOST=${env_host}
  DOCKER_REGISTRY_PORT=${env_port}
  BASEDIR=$(dirname "$0")
}

function check_builder() {
  docker buildx inspect "${DOCKER_BUILDER}" 2>&1 > /dev/null
  echo $?
}

function setup_builder() {
  docker buildx create --name "${DOCKER_BUILDER}" \
    --driver docker-container \
    --driver-opt network=host \
    --bootstrap
}

function check_registry() {
  if [[ "${DOCKER_REGISTRY}" != "localhost:${DOCKER_REGISTRY_PORT}" ]] ; then
    echo "0"
    return
  fi

  local result=$(docker ps -aq -f "name=${DOCKER_REGISTRY_NAME}")
  if [[ "${result}" == "" ]] ; then
    echo "1"
  else
    echo "0"
  fi
}

setup_variables

if [[ "$(check_registry)" != "0" ]] ; then
  echo "creating local registry"
  docker run --name "${DOCKER_REGISTRY_NAME}" \
    --restart always \
    --publish ${DOCKER_REGISTRY_PORT}:5000 \
    --detach "${DOCKER_REGISTRY_IMAGE}"
fi

if [[ "$(check_builder)" != "0" ]] ; then
  echo "creating builder instance"

  setup_builder
fi
